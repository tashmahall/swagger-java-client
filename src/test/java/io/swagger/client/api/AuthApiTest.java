/*
 * Investflex Algo Trading Platform API
 * **Investflex Algo Trading Platform API**. We describe here all available APIs to allow users the execution of trading algorithms in our Algorithmic Trading platform.   All APIs required authentication token to enable its access. Use the **login** API of the **AUTH** section and to generate an authentication token and Authorize the token using the **AUTHORIZE** button.  Use the **environment dropdown** to select the proper environment on which execute the strategies. _http://api.flexscan.com.br_ simulation environment is selected by default. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hernan@investflex.com.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import org.junit.Test;

import io.swagger.client.ApiException;
import io.swagger.client.model.InlineResponse200;
import io.swagger.client.model.Login;

/**
 * API tests for AuthApi
 */
public class AuthApiTest {

    private final AuthApi api = new AuthApi();

    /**
     * Return auth token based on login credentials
     *
     * Return auth token based on login credentials. Username and password must be informed as params.  The authentication token will be returned on the response body. Copy this token and paste into the token text input of the **AUTHORIZE** button. Once enable all other APIs will use this token to access services. Token has a limited duration, so if you receive an authorization error afetar a while, repeat this procedure to authenticate with a new token 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAuthTokenTest() throws ApiException {
        Login body = new Login();
        body.setPsswd("12qwaszx#E");
        body.setUser("hub_georgecabral");
        InlineResponse200 response = api.getAuthToken(body);
        System.out.println(response.getAuthToken());

        // TODO: test validations
    }
}
